every 2 minutes:
    broadcast "&dNew Player can gain 0.05x Extra booster for everyone (/booster)"
    wait 3 minutes
    broadcast "&dDaily Lord Rank Giveaway in /discord!"


every 1 second:
    if {Arsyg} is greater than 0:
        subtract 1 from {Arsyg}
    

every 1 minutes:
    if {booster::money::time} > 0:
        subtract 1 from {booster::money::time}
    if {booster::money::time} = 0:
        set {booster::money} to 1
    if {booster::money::time} = 10:
        broadcast "&4&lLegendz&a&lRPG &e&L>> &6&lBooster Time: %{booster::money}%x Money Booster 10 Minutes Left"
    if {booster::exp::time} > 0:
        subtract 1 from {booster::exp::time}
    if {booster::exp::time} = 0:
        set {booster::exp} to 1
    if {booster::exp::time} = 10:
        broadcast "&4&lLegendz&a&lRPG &e&L>> &6&lBooster Time: %{booster::exp}%x EXP Booster 10 Minutes Left"
    loop offline players:
        if {cf::%loop-offline player's uuid%::time} is set:
            subtract 1 from {cf::%loop-offline player's uuid%::time}
        if {cf::%loop-offline player's uuid%::time} <= 0:
            add 1 to {cf::%loop-offline player's uuid%}
            set {cf::%loop-offline player's uuid%::time} to 60
            if loop-offline player has permission "is.lord":
                add 1 to {cf::%loop-offline player's uuid%}
                if loop-offline player has permission "is.king":
                    add 1 to {cf::%loop-offline player's uuid%}
                    if loop-offline player has permission "is.demigod":
                        add 2 to {cf::%loop-offline player's uuid%}
    

command /leaderboardupdate:
    trigger:
        loop all players:
            set {leveltop::%loop-player%} to {level::%loop-player's uuid%}
            loop {leveltop::*}:
                add 1 to {_size}
                if {_low.to.high.list::%loop-value-2%} is not set:
                    set {_low.to.high.list::%loop-value-2%} to loop-index
                else:
                    set {_n} to 0
                    loop {_size} times:
                        set {_n} to {_n}+1
                        {_low.to.high.list::%loop-value-2%.%{_n}%} is not set
                        set {_low.to.high.list::%loop-value-2%.%{_n}%} to loop-index
                        stop loop
            wait 1 tick
            set {_n} to size of {_low.to.high.list::*}
            loop {_low.to.high.list::*}:
                set {_high.to.low.list::%{_n}%} to loop-value-2
                set {_n} to {_n}-1
            wait 1 tick
            loop {_high.to.low.list::*}:
                add 1 to {_result}
                if {_result} = 1:
                    execute console command "/hologram setline leaderboard %{_result}+1% &4&l%{_result}%. %loop-value-2% | %{leveltop::%loop-value-2%}% Levels"
                if {_result} <= 4:
                    if {_result} > 1:
                        execute console command "/hologram setline leaderboard %{_result}+1% &c&l%{_result}%. %loop-value-2% | %{leveltop::%loop-value-2%}% Levels"
                if {_result} <= 7:
                    if {_result} > 4:
                        execute console command "/hologram setline leaderboard %{_result}+1% &6&l%{_result}%. %loop-value-2% | %{leveltop::%loop-value-2%}% Levels"
                if {_result} <= 10:
                    if {_result} > 7:
                        execute console command "/hologram setline leaderboard %{_result}+1% &e&l%{_result}%. %loop-value-2% | %{leveltop::%loop-value-2%}% Levels"
                if {_result} is 10:
                    stop

every 15 minutes:
    execute console command "/leaderboardupdate"

on join:
  set title of player's scoreboard to "&4&lLegendz&a&lRPG"
  while player is online:
    wait 1 second
    set line 15 of player's scoreboard to ""
    set line 14 of player's scoreboard to "<##1ccc12> %player%:"
    set line 13 of player's scoreboard to "  &6Balance: &e%player's balance%"
    set line 12 of player's scoreboard to "  &2Gem: &a%{gem::%player's uuid%}%"
    set line 11 of player's scoreboard to "  &5Level: &d%{level::%player's uuid%}%"
    set {_xp} to xpBar("%{exp::%player's uuid%}%/%{expforlvlup::%player's uuid%}%", {exp::%player's uuid%}/{expforlvlup::%player's uuid%})
    set line 10 of player's scoreboard to "  &5Exp: &d[&a%{exp::%player's uuid%}%&8/&a%{expforlvlup::%player's uuid%}%&d]"
    set line 9 of player's scoreboard to ""
    set line 8 of player's scoreboard to "<##1ccc12> Boosters:"
    set line 7 of player's scoreboard to "  &7Exp: &a%{booster::exp}%x &c%{booster::exp::time}% Min"
    set line 6 of player's scoreboard to "  &7Money: &a%{booster::money}%x &c%{booster::money::time}% Min"
    set line 5 of player's scoreboard to ""
    set line 4 of player's scoreboard to "&eLegendzRPG.minehut.gg"


function xpBar(s:string, percentage: number) :: string:
  replace first floor(length of {_s} * {_percentage}) characters of {_s} with "&a%first floor(length of {_s} * {_percentage}) characters of {_s}%&7" in {_s}
  return {_s}
